{"version":3,"sources":["pipes/bitToBoolean.js","pipes/booleanToBit.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["module","exports","bit","parseInt","bool","Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","addCloseButton","showAddTask","Task","task","deleteTask","toggleReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","onSubmit","useState","setText","setDay","setReminder","e","preventDefault","alert","value","type","placeholder","onChange","target","checked","currentTarget","bitToBoolean","require","booleanToBit","LOCALHOST","PORT","App","setShowAddTask","setTasks","useEffect","a","fetchTasks","taskFromServer","getTask","fetch","res","json","data","console","log","fetchTask","method","filter","taskToUpdate","bitBefore","updatedTask","headers","body","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8105e364.chunk.js","sourcesContent":["const bitToBoolean = (bit) => {\r\n    if(parseInt(bit) === 0){\r\n        return false\r\n    } else{\r\n        return true\r\n    }\r\n}\r\n\r\nmodule.exports = bitToBoolean","const booleanToBit = (bool) => {\r\n    if (bool){\r\n        return 1\r\n    } else {\r\n        return 0\r\n    }\r\n}\r\n\r\nmodule.exports = booleanToBit\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button className=\"btn\" style={{ backgroundColor:color }} onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    text: \"Button\",\r\n    color:\"black\"\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title,addCloseButton,showAddTask}) => {\r\n      \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAddTask? \"blue\" : \"green\"} text={showAddTask? \"Close\" : \"Add\"} onClick={addCloseButton} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nimport React from 'react'\r\nconst Task = ({task, deleteTask, toggleReminder}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ?'reminder':''}`} onDoubleClick={() => toggleReminder(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes onClick={() => deleteTask(task.id)} style={{color:'red', cursor:'pointer'}}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks, deleteTask, toggleReminder}) => {\r\n    return (\r\n        <div>\r\n            {tasks.map( (task, index) => (\r\n                <Task key={index} task={task} deleteTask={deleteTask} toggleReminder={toggleReminder}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({onSubmit}) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(text === ''){\r\n            alert(\"Please enter a task.\")\r\n            return\r\n        }\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n        onSubmit({text,day,reminder})\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={handleSubmit}>\r\n           <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    value={text}\r\n                    type='text' \r\n                    placeholder='Add Task'\r\n                    onChange={(e) => {setText(e.target.value)}}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day and Time</label>\r\n                <input \r\n                    value={day}\r\n                    type='text' \r\n                    placeholder='Day and Time'\r\n                    onChange={(e) => {setDay(e.target.value)}}/>\r\n            </div>\r\n            <div>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                type='checkbox'\r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e) => {setReminder(e.currentTarget.checked)}}/>\r\n            </div>\r\n            <input \r\n                value=\"Save Task\" \r\n                type=\"submit\" \r\n                className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import './App.css';\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport {useState, useEffect} from 'react'\r\n\r\nconst  bitToBoolean  = require(\"./pipes/bitToBoolean\")\r\nconst  booleanToBit  = require(\"./pipes/booleanToBit\")\r\n\r\nconst LOCALHOST = '192.168.0.20'\r\nconst PORT = '5000'\r\n\r\nfunction App() {\r\n\r\n    const [showAddTask, setShowAddTask] = useState(true)\r\n    const [tasks, setTasks] = useState([])\r\n  \r\n\r\n    useEffect(() => {\r\n      const getTask = async () => {\r\n        const taskFromServer = await fetchTasks()\r\n        setTasks(taskFromServer)\r\n      }  \r\n      getTask()\r\n    },[])\r\n\r\n    //GET ALL TASKS\r\n    const fetchTasks = async () => {\r\n      const res = await fetch(`http://${LOCALHOST}:${PORT}/tasks`)\r\n      const data = await res.json()\r\n      console.log(data);\r\n      data.map( task => task.reminder = bitToBoolean(task.reminder)) \r\n      console.log(data);\r\n      return data\r\n    }\r\n\r\n    //GET TASK\r\n    const fetchTask = async (id) => {\r\n      const res = await fetch(`http://${LOCALHOST}:${PORT}/tasks/${id}`)\r\n      const data = await res.json()\r\n\r\n      return data\r\n    }\r\n   \r\n    //DELETE TASK\r\n    const deleteTask = async (id) => {\r\n      await fetch(`\r\n        http://${LOCALHOST}:${PORT}/tasks/${id}`,\r\n        {method: 'DELETE'}\r\n      )\r\n      setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    //PUT: TOGGLE REMINDER\r\n    const toggleReminder = async (id) => {\r\n\r\n      const taskToUpdate = await fetchTask(id)  // return a reminder with a bit\r\n      const bitBefore = bitToBoolean(taskToUpdate.reminder) // convert reminder to boolean\r\n      const updatedTask = {...taskToUpdate, reminder: !bitBefore}\r\n\r\n      var bit = 0\r\n      if (bitBefore){\r\n        bit = 0\r\n      } else {\r\n        bit = 1\r\n      }\r\n      const res = await fetch(\r\n        `http://${LOCALHOST}:${PORT}/tasks/${id}`,\r\n        {\r\n          method:'PUT',\r\n          headers:{\r\n            'Content-type': 'application/json',\r\n          },\r\n          body:JSON.stringify({...updatedTask,reminder:bit})\r\n        }\r\n      )\r\n      \r\n      // const data = await res.json()\r\n      setTasks(tasks.map(task => task.id === id ? {...task, reminder: updatedTask.reminder} : task ))\r\n\r\n    }\r\n\r\n    //POST TASK\r\n    const onSubmit = async (task) => {\r\n      const bit = booleanToBit(task.reminder)\r\n      task = {...task, reminder: bit}\r\n      const res = await fetch(\r\n        `http://${LOCALHOST}:${PORT}/tasks`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type':'application/json',\r\n          },\r\n          body: JSON.stringify(task)\r\n        }\r\n      )\r\n\r\n      const data = await res.json()\r\n      setTasks([...tasks,data])\r\n\r\n      // const id = Math.floor(Math.random()*1000) + 1\r\n      // const newTask = {id,...task}\r\n      // setTasks([...tasks, newTask])\r\n    }\r\n\r\n\r\n\r\n    const addCloseButton = () => {\r\n      console.log(\"add close button received\");\r\n      setShowAddTask(!showAddTask)\r\n    }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header addCloseButton={addCloseButton} showAddTask={showAddTask}/>\r\n      {showAddTask?<AddTask onSubmit={onSubmit}/> :<></>}\r\n      <Tasks tasks={tasks} toggleReminder={toggleReminder} deleteTask={deleteTask} />\r\n    </div>\r\n     );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}